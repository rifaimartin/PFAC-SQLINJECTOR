# Compiler settings
CC = gcc
NVCC = nvcc
CFLAGS = -Wall -Wextra -I./include -I./src
CUDA_PATH = "C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v12.4"
NVCCFLAGS = -I"$(CUDA_PATH)/include" -I./include -I./src

# Directories
SRC_DIR = src
OBJ_DIR = obj
BIN_DIR = bin

# Source files
C_SRCS = $(SRC_DIR)/main.c $(SRC_DIR)/sequential/aho_corasick.c
CUDA_SRCS = $(SRC_DIR)/parallel/pfac.cu
C_OBJS = $(C_SRCS:$(SRC_DIR)/%.c=$(OBJ_DIR)/%.o)
CUDA_OBJS = $(CUDA_SRCS:$(SRC_DIR)/%.cu=$(OBJ_DIR)/parallel/%.obj)

# Executable name
TARGET = $(BIN_DIR)/sql_detector.exe

# Create necessary directories
MKDIR_P = mkdir -p
$(shell mkdir $(OBJ_DIR)\parallel 2>NUL)
$(shell mkdir $(BIN_DIR) 2>NUL)

# Main target
all: directories $(TARGET)

directories:
	@if not exist $(OBJ_DIR) mkdir $(OBJ_DIR)
	@if not exist $(OBJ_DIR)\parallel mkdir $(OBJ_DIR)\parallel
	@if not exist $(OBJ_DIR)\sequential mkdir $(OBJ_DIR)\sequential
	@if not exist $(BIN_DIR) mkdir $(BIN_DIR)

# Link
$(TARGET): $(C_OBJS) $(CUDA_OBJS)
	$(NVCC) -o $@ $^ -L"$(CUDA_PATH)/lib/x64" -lcudart

# Compile C sources
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c
	$(CC) $(CFLAGS) -c $< -o $@

# Compile CUDA sources
$(OBJ_DIR)/parallel/%.obj: $(SRC_DIR)/parallel/%.cu
	$(NVCC) $(NVCCFLAGS) -c $< -o $@

clean:
	del /Q /F /S $(OBJ_DIR)\* $(BIN_DIR)\*

.PHONY: all clean directories