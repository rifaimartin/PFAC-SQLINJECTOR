Extracted 73 patterns using regex
Successfully read 73 patterns from patterns.txt
First 10 patterns:
1. xp_cmdshell
2. exec xp_
3. into outfile
4. load_file
5. load data infile
6. /etc/passwd
7. shell.php
8. net user hack
9. lambda_async
10. create user
... and 63 more patterns
Weight distribution: 1=0, 2=0, 4=0, 6=0, 12=0, 30=10
Trie node count: 489
Transitions count: 488
Average transitions per node: 0.997955
Loaded 5000 queries.
Launching kernel with 20 blocks and 256 threads per block...
Query 0: "' HAVING 1=1 #"
  Normalized: "' having 1=1 #"
  Score: 43, computed risk: medium, expected: medium [OK]
Query 1: "' HAVING 1=1 #"
  Normalized: "' having 1=1 #"
  Score: 43, computed risk: medium, expected: medium [OK]
Query 2: "' HAVING 1=1"
  Normalized: "' having 1=1"
  Score: 43, computed risk: medium, expected: medium [OK]
Query 3: "' OR CONVERT(int, '1') --"
  Normalized: "' or convert(int, '1') --"
  Score: 36, computed risk: medium, expected: medium [OK]
Query 4: "' HAVING 1=1"
  Normalized: "' having 1=1"
  Score: 43, computed risk: medium, expected: medium [OK]
Query 5: "' GROUP BY 1 --"
  Normalized: "' group by 1 --"
  Score: 35, computed risk: medium, expected: medium [OK]
Query 6: "' LIMIT 1 /**/"
  Normalized: "' limit 1 /**/"
  Score: 23, computed risk: medium, expected: medium [OK]
Query 7: "' GROUP BY 1"
  Normalized: "' group by 1"
  Score: 30, computed risk: medium, expected: medium [OK]
Query 8: "' LIMIT 1 /**/"
  Normalized: "' limit 1 /**/"
  Score: 23, computed risk: medium, expected: medium [OK]
Query 9: "' OR MD5('test') --"
  Normalized: "' or md5('test') --"
  Score: 36, computed risk: medium, expected: medium [OK]

Total: 5000, Correct: 4295, Accuracy: 85.9%
Queries with zero score: 0 (0%)
Optimized Sparse PFAC kernel execution time: 0.13312 ms
